# Chrome Extension Development
# ==========================

# Build and distribution files
*.zip
*.crx
*.pem
*.key

# Development files
.DS_Store
Thumbs.db

# IDE and Editor files
.vscode/
.idea/
*.swp
*.swo
*~

# Node.js (if using build tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
package-lock.json
yarn.lock

# Temporary files
*.tmp
*.temp
*.log

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows specific
desktop.ini

# Backup files
*.bak
*.backup
*~

# Chrome extension specific
# Uncomment if you use these tools:
# web-ext-artifacts/
# dist/
# build/

# Environment files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Coverage reports
coverage/
*.lcov

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# next.js build output
.next

# nuxt.js build output
.nuxt

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# Chrome extension development specific ignores
# =============================================

# Extension packaging
web-ext-artifacts/

# Source maps (if using build tools)
*.map

# TypeScript build output (if using TypeScript)
*.tsbuildinfo

# ESLint cache
.eslintcache

# Prettier cache
.prettiercache

# Stylelint cache
.stylelintcache

# Webpack build output
dist/
build/

# Rollup build output
dist/
